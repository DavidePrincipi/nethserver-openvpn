#!/usr/bin/perl

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use Getopt::Std;

my %opts;
my $crtFile = "/etc/pki/tls/certs/NSRV.crt";
my $keyFile = "/etc/pki/tls/private/NSRV.key";
my $outputDir = "/var/lib/nethserver/certs";
my $csrOut = "";
my $crtOut = "";
my $keyOut = "";
my $p12Out = "";
my $commonName = "";
my $delete = 0;
my $errors = 0;

sub die_help()
{
    print "
pki-vpn-revoke: Revoke client certificate.

Usage:
   pki-vpn-revoke [-h] [-d] <commonName>

   -d delete revoke certificate
   -h this help
\n";
   exit 1;
}

getopts('hd', \%opts);

if($opts{'h'}) { die_help() }

if($opts{'d'}) { $delete = 1; }

if ( $#ARGV < 0 ) {
   die_help();
} else {
    $commonName = $ARGV[0];
    $csrOut = "$outputDir/$commonName.csr";
    $keyOut = "$outputDir/$commonName.key";
    $crtOut = "$outputDir/$commonName.crt";
    $p12Out = "$outputDir/$commonName.p12";
}

if ( ! -r $keyFile ) {
    die("Could not read $keyFile\n");
}
if ( ! -r $crtFile ) {
    die("Could not read $crtFile\n");
}

my $ret = system("/usr/bin/openssl verify -CAfile $crtFile -crl_check -CRLfile $outputDir/crl.pem $crtOut 2>1 | /bin/grep -q revoked");
if ($ret == 0) {
    die("Certificate $commonName already revoked!\n");
}

# Revoke certificate
$errors += system("/usr/bin/openssl ca -revoke  $crtOut  -config $outputDir/ca.cnf");
$errors += system("/usr/bin/openssl ca -gencrl -out  $outputDir/crl.pem -config $outputDir/ca.cnf");

if ($delete) {
    my $pem = '';
    unlink($csrOut);
    unlink($keyOut);
    unlink($crtOut);
    unlink($p12Out);
    open(FILE, "$outputDir/certindex");
    while (<FILE>) {
        if ($_=~/CN=$commonName/) { # find revoked certificate
            my @fields = split(' ',$_);
            next unless ($fields[0] eq 'R');
            $pem = "$outputDir/".$fields[3].".pem";
            unlink($pem); #delete auto-create pem file
        }
    }
    close(FILE);
}

exit (1 ? $errors > 0 : 0);
